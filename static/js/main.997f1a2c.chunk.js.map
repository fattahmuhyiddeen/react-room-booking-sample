{"version":3,"sources":["logo.svg","OccupancyProblem.js","TestJS.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MAX_NUMBER","styles","inputContainer","margin","App","state","adult","children","infant","room","onChange","type","value","parseInt","isNaN","alert","_this","setState","Object","defineProperty","calculateResult","_this$state","Math","ceil","handleFocus","event","target","select","_this2","this","_this$state2","react_default","a","createElement","style","onFocus","e","Component","rule","Taiwan","Hong Kong SAR","defaultData","name","code","countryName","countryCode","data","processData","result","resultArray","map","item","push","_arr","entries","_i","length","_ref3","_ref2","slicedToArray","key","airports","sort","country","fetch","method","headers","Access-Control-Allow-Origin","Accept","Content-Type","then","response","json","responseJson","JSON","stringify","catch","error","console","log","toString","selectedData","closeModal","axios","get","r","roomTypeLabel","_this3","content","className","width","verticalAlign","i","borderBottom","bedTypeLabel","boardCodeDescription","totalPrice","onClick","src","logo","alt","esm","OccupancyProblem_App","TestJS_App","lib_default","isOpen","onRequestClose","aria","labelledby","describedby","id","groupKey","description","accommodateText","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.997f1a2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nconst MAX_NUMBER = 999 //to indicate rejected booking\nconst styles = {\n  inputContainer: {\n    margin: '10px'\n  }\n}\nexport default class App extends Component {\n  state = {\n    adult: 0,\n    children: 0,\n    infant: 0,\n    room: 0\n  }\n\n  onChange = (type, value) => {\n    if (value !== '') {\n      value = parseInt(value)\n      if (isNaN(value)) {\n        return alert('Please enter number only')\n      }\n    } else {\n      value = 0\n    }\n    this.setState({ [type]: value }, this.calculateResult)\n  }\n\n  calculateResult = () => {\n    const { adult, children, infant } = this.state\n    let room = 0\n\n    if (adult >= children && adult >= infant) {\n      room = Math.ceil(adult / 3)\n    } else if (children > adult && children >= infant) {\n      const ratioChildrenAdult = Math.ceil(children / adult)\n      room = ratioChildrenAdult > 3 ? MAX_NUMBER : Math.ceil(children / 3)\n    } else if (infant > adult && infant >= children) {\n      const ratioInfantAdult = Math.ceil(infant / adult)\n      room = ratioInfantAdult > 3 ? MAX_NUMBER : Math.ceil(infant / 3)\n    }\n\n    this.setState({ room })\n  }\n  handleFocus = (event) => event.target.select()\n\n  render() {\n    const { adult, children, infant, room } = this.state\n    return (\n      <div>\n        <div style={styles.inputContainer} >Adult : <input onFocus={this.handleFocus} onChange={(e) => this.onChange('adult', e.target.value)} value={adult} /></div>\n        <div style={styles.inputContainer} >Children : <input onFocus={this.handleFocus} onChange={(e) => this.onChange('children', e.target.value)} value={children} /></div>\n        <div style={styles.inputContainer} >Infant : <input onFocus={this.handleFocus} onChange={(e) => this.onChange('infant', e.target.value)} value={infant} /></div>\n        {room > 3 || (adult + children > 7) ?\n          <div>Booking Rejected</div>\n          :\n          <div>Number of room{room > 1 ? 's' : ''} can be fit in : {room}</div>\n        }\n        {room === MAX_NUMBER && <div>Not enough adult to look after children / infant</div>}\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios'\n\nconst styles = {\n}\n\nconst rule = {\n  \"Taiwan\": \"Mainland China\",\n  \"Hong Kong SAR\": \"Mainland China\"\n}\n\nconst defaultData = [\n  {\n    \"name\": \"Ishigaki (ISG), Japan\",\n    \"code\": \"ISG\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  },\n  {\n    \"name\": \"Jeju (CJU), South Korea\",\n    \"code\": \"CJU\",\n    \"countryName\": \"South Korea\",\n    \"countryCode\": \"KR\"\n  },\n  {\n    \"name\": \"Chiang Rai (CEI), Thailand\",\n    \"code\": \"CEI\",\n    \"countryName\": \"Thailand\",\n    \"countryCode\": \"TH\"\n  },\n  {\n    \"name\": \"Tokyo (NRT), Japan\",\n    \"code\": \"NRT\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  },\n  {\n    \"name\": \"Hong Kong (HKG), Hong Kong SAR\",\n    \"code\": \"HKG\",\n    \"countryName\": \"Hong Kong SAR\",\n    \"countryCode\": \"HK\"\n  },\n  {\n    \"name\": \"Fukuoka (FUK), Japan\",\n    \"code\": \"FUK\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  },\n  {\n    \"name\": \"Osaka (KIX), Japan\",\n    \"code\": \"KIX\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  },\n  {\n    \"name\": \"Tokyo (HND), Japan\",\n    \"code\": \"HND\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  },\n  {\n    \"name\": \"Tokyo (TYO), Japan\",\n    \"code\": \"TYO\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  },\n  {\n    \"name\": \"Pusan (PUS), South Korea\",\n    \"code\": \"PUS\",\n    \"countryName\": \"South Korea\",\n    \"countryCode\": \"KR\"\n  },\n  {\n    \"name\": \"Seoul (ICN), South Korea\",\n    \"code\": \"ICN\",\n    \"countryName\": \"South Korea\",\n    \"countryCode\": \"KR\"\n  },\n  {\n    \"name\": \"Chiang Mai (CNX), Thailand\",\n    \"code\": \"CNX\",\n    \"countryName\": \"Thailand\",\n    \"countryCode\": \"TH\"\n  },\n  {\n    \"name\": \"Phuket (HKT), Thailand\",\n    \"code\": \"HKT\",\n    \"countryName\": \"Thailand\",\n    \"countryCode\": \"TH\"\n  },\n  {\n    \"name\": \"Da Nang (DAD), Vietnam\",\n    \"code\": \"DAD\",\n    \"countryName\": \"Vietnam\",\n    \"countryCode\": \"VN\"\n  },\n  {\n    \"name\": \"Taichung (RMQ), Taiwan\",\n    \"code\": \"RMQ\",\n    \"countryName\": \"Taiwan\",\n    \"countryCode\": \"TW\"\n  },\n  {\n    \"name\": \"Saipan (SPN), United States\",\n    \"code\": \"SPN\",\n    \"countryName\": \"United States\",\n    \"countryCode\": \"US\"\n  },\n  {\n    \"name\": \"Kunming (KMG), Mainland China\",\n    \"code\": \"KMG\",\n    \"countryName\": \"Mainland China\",\n    \"countryCode\": \"CN\"\n  },\n  {\n    \"name\": \"Ningbo (NGB), Mainland China\",\n    \"code\": \"NGB\",\n    \"countryName\": \"Mainland China\",\n    \"countryCode\": \"CN\"\n  },\n  {\n    \"name\": \"Hiroshima (HIJ), Japan\",\n    \"code\": \"HIJ\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  },\n  {\n    \"name\": \"Kagoshima (KOJ), Japan\",\n    \"code\": \"KOJ\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  },\n  {\n    \"name\": \"Nagoya (NGO), Japan\",\n    \"code\": \"NGO\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  },\n  {\n    \"name\": \"Takamatsu (TAK), Japan\",\n    \"code\": \"TAK\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  },\n  {\n    \"name\": \"Nha-Trang (CXR), Vietnam\",\n    \"code\": \"CXR\",\n    \"countryName\": \"Vietnam\",\n    \"countryCode\": \"VN\"\n  },\n  {\n    \"name\": \"Siem Reap (REP), Cambodia\",\n    \"code\": \"REP\",\n    \"countryName\": \"Cambodia\",\n    \"countryCode\": \"KH\"\n  },\n  {\n    \"name\": \"Nagasaki (NGS), Japan\",\n    \"code\": \"NGS\",\n    \"countryName\": \"Japan\",\n    \"countryCode\": \"JP\"\n  }\n]\nconst url = \"https://booking.uflyholidays.com/api/get-all-airports/en-US\"\nexport default class App extends Component {\n  state = {\n    data: []\n  }\n\n  componentDidMount() {\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Access-Control-Allow-Origin': '',\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        alert(JSON.stringify(responseJson))\n      })\n      .catch((error) => {\n        console.log(error);\n        this.processData(defaultData)\n      });\n  }\n\n  processData = (data) => {\n    const result = {};\n    const resultArray = []\n    data.map((item) => {\n      let countryName = item.countryName\n      if (rule[countryName]) {\n        countryName = rule[item.countryName]\n      }\n      if (result[countryName]) {\n        result[countryName].push(item.code)\n      } else {\n        result[countryName] = [item.code]\n      }\n    })\n    for (const [key, value] of Object.entries(result)) {\n      const airports = value.sort()\n      resultArray.push({ country: key, airports })\n    }\n\n    // resultArray.sort()\n    this.setState({ data: resultArray })\n  }\n\n  render() {\n    const { data } = this.state\n    return <div>\n      {data.map((item) => {\n        return <div>\n          <div>{item.country} : {item.airports.toString()}<br />\n            <br />\n          </div>\n        </div>\n      })}\n    </div >\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios'\nimport logo from './logo.svg';\nimport Modal from 'react-modal';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport './App.css';\nimport OccupancyProblem from './OccupancyProblem'\nimport TestJS from './TestJS'\n\nclass App extends Component {\n  state = { data: {}, selectedData: null }\n  componentDidMount() {\n    axios.get(\"./test.json\")\n      .then((result) => {\n        const data = {}\n        result.data.map((r) => {\n          if (data[r.roomTypeLabel]) {\n            data[r.roomTypeLabel].push(r)\n          } else {\n            data[r.roomTypeLabel] = [r]\n          }\n        })\n        this.setState({ data })\n      })\n      .catch((e) => alert(JSON.stringify(e)))\n  }\n\n  closeModal = () => this.setState({ selectedData: null })\n  render() {\n    const content = []\n    const { data, selectedData } = this.state\n    for (const [key, value] of Object.entries(data)) {\n      content.push(<div className=\"parentContainer\">\n        <table style={{ width: '100%' }}>\n          <tr>\n            <td style={{ verticalAlign: 'top' }}>\n              {key}\n            </td>\n            <td>\n              <table>\n                {value.map((i) => {\n                  return <tr style={{ borderBottom: '' }}>\n                    <td >\n                      <div className=\"cellContainer\">\n                        <div>Bed Type : {i.bedTypeLabel.length > 0 ? i.bedTypeLabel.toString() : '-'}</div>\n                        <div>{i.boardCodeDescription}</div>\n                      </div>\n                    </td>\n                    <td >\n                      <div className=\"actionContainer\">\n                        <div>RM {i.totalPrice}</div>\n                        <div className=\"actionButton\" onClick={() => { this.setState({ selectedData: i }); }}>View</div>\n                      </div>\n                    </td>\n                  </tr>\n                })}\n              </table>\n            </td>\n          </tr>\n        </table>\n      </div>)\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Tabs>\n            <TabList>\n              <Tab>Assignment 1</Tab>\n              <Tab>Occupancy Problem</Tab>\n              <Tab>Test JS</Tab>\n            </TabList>\n\n            <TabPanel>\n              <h2>Assignment 1</h2>\n              {content}\n            </TabPanel>\n            <TabPanel>\n              <h2>Occupancy Problem</h2>\n              <OccupancyProblem />\n            </TabPanel>\n            <TabPanel>\n              <h2>Test JS</h2>\n              <TestJS />\n            </TabPanel>\n          </Tabs>\n        </header>\n        <Modal\n          isOpen={selectedData}\n          onRequestClose={this.closeModal}\n          aria={{\n            labelledby: \"heading\",\n            describedby: \"full_description\"\n          }}>\n          {selectedData && <div>\n            <h1 id=\"heading\">{selectedData.name} ({selectedData.groupKey})</h1>\n            <div id=\"full_description\">\n              <p>{selectedData.description}</p>\n              <p>Accommodation : {selectedData.accommodateText}</p>\n\n            </div>\n          </div>}\n          <div onClick={this.closeModal} className=\"closeButton\">close</div>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}