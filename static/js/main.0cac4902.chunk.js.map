{"version":3,"sources":["logo.svg","OccupancyProblem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MAX_NUMBER","styles","inputContainer","margin","App","state","adult","children","infant","room","onChange","type","value","parseInt","isNaN","alert","_this","setState","Object","defineProperty","calculateResult","_this$state","Math","ceil","handleFocus","event","target","select","_this2","this","_this$state2","react_default","a","createElement","style","onFocus","e","Component","data","selectedData","closeModal","axios","get","then","result","map","r","roomTypeLabel","push","catch","JSON","stringify","_this3","content","_arr","entries","_i","length","_ref3","_ref2","slicedToArray","key","className","width","verticalAlign","i","borderBottom","bedTypeLabel","toString","boardCodeDescription","totalPrice","onClick","src","logo","alt","esm","OccupancyProblem_App","lib_default","isOpen","onRequestClose","aria","labelledby","describedby","id","name","groupKey","description","accommodateText","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0cac4902.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nconst MAX_NUMBER = 999 //to indicate rejected booking\nconst styles = {\n  inputContainer: {\n    margin: '10px'\n  }\n}\nexport default class App extends Component {\n  state = {\n    adult: 0,\n    children: 0,\n    infant: 0,\n    room: 0\n  }\n\n  onChange = (type, value) => {\n    if (value !== '') {\n      value = parseInt(value)\n      if (isNaN(value)) {\n        return alert('Please enter number only')\n      }\n    } else {\n      value = 0\n    }\n    this.setState({ [type]: value }, this.calculateResult)\n  }\n\n  calculateResult = () => {\n    const { adult, children, infant } = this.state\n    let room = 0\n\n    if (adult >= children && adult >= infant) {\n      room = Math.ceil(adult / 3)\n    } else if (children > adult && children >= infant) {\n      const ratioChildrenAdult = Math.ceil(children / adult)\n      room = ratioChildrenAdult > 3 ? MAX_NUMBER : Math.ceil(children / 3)\n    } else if (infant > adult && infant >= children) {\n      const ratioInfantAdult = Math.ceil(infant / adult)\n      room = ratioInfantAdult > 3 ? MAX_NUMBER : Math.ceil(infant / 3)\n    }\n\n    this.setState({ room })\n  }\n  handleFocus = (event) => event.target.select()\n\n  render() {\n    const { adult, children, infant, room } = this.state\n    return (\n      <div>\n        <div style={styles.inputContainer} >Adult : <input onFocus={this.handleFocus} onChange={(e) => this.onChange('adult', e.target.value)} value={adult} /></div>\n        <div style={styles.inputContainer} >Children : <input onFocus={this.handleFocus} onChange={(e) => this.onChange('children', e.target.value)} value={children} /></div>\n        <div style={styles.inputContainer} >Infant : <input onFocus={this.handleFocus} onChange={(e) => this.onChange('infant', e.target.value)} value={infant} /></div>\n        {room > 3 || (adult + children > 7) ?\n          <div>Booking Rejected</div>\n          :\n          <div>Number of room{room > 1 ? 's' : ''} can be fit in : {room}</div>\n        }\n        {room === MAX_NUMBER && <div>Not enough adult to look after children / infant</div>}\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios'\nimport logo from './logo.svg';\nimport Modal from 'react-modal';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport './App.css';\nimport OccupancyProblem from './OccupancyProblem'\n\nclass App extends Component {\n  state = { data: {}, selectedData: null }\n  componentDidMount() {\n    axios.get(\"./test.json\")\n      .then((result) => {\n        const data = {}\n        result.data.map((r) => {\n          if (data[r.roomTypeLabel]) {\n            data[r.roomTypeLabel].push(r)\n          } else {\n            data[r.roomTypeLabel] = [r]\n          }\n        })\n        this.setState({ data })\n      })\n      .catch((e) => alert(JSON.stringify(e)))\n  }\n\n  closeModal = () => this.setState({ selectedData: null })\n  render() {\n    const content = []\n    const { data, selectedData } = this.state\n    for (const [key, value] of Object.entries(data)) {\n      content.push(<div className=\"parentContainer\">\n        <table style={{ width: '100%' }}>\n          <tr>\n            <td style={{ verticalAlign: 'top' }}>\n              {key}\n            </td>\n            <td>\n              <table>\n                {value.map((i) => {\n                  return <tr style={{ borderBottom: '' }}>\n                    <td >\n                      <div className=\"cellContainer\">\n                        <div>Bed Type : {i.bedTypeLabel.length > 0 ? i.bedTypeLabel.toString() : '-'}</div>\n                        <div>{i.boardCodeDescription}</div>\n                      </div>\n                    </td>\n                    <td >\n                      <div className=\"actionContainer\">\n                        <div>RM {i.totalPrice}</div>\n                        <div className=\"actionButton\" onClick={() => { this.setState({ selectedData: i }); }}>View</div>\n                      </div>\n                    </td>\n                  </tr>\n                })}\n              </table>\n            </td>\n          </tr>\n        </table>\n      </div>)\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Tabs>\n            <TabList>\n              <Tab>Assignment 1</Tab>\n              <Tab>Occupancy Problem</Tab>\n            </TabList>\n\n            <TabPanel>\n              <h2>Assignment 1</h2>\n              {content}\n            </TabPanel>\n            <TabPanel>\n              <h2>Occupancy Problem</h2>\n              <OccupancyProblem />\n            </TabPanel>\n          </Tabs>\n        </header>\n        <Modal\n          isOpen={selectedData}\n          onRequestClose={this.closeModal}\n          aria={{\n            labelledby: \"heading\",\n            describedby: \"full_description\"\n          }}>\n          {selectedData && <div>\n            <h1 id=\"heading\">{selectedData.name} ({selectedData.groupKey})</h1>\n            <div id=\"full_description\">\n              <p>{selectedData.description}</p>\n              <p>Accommodation : {selectedData.accommodateText}</p>\n\n            </div>\n          </div>}\n          <div onClick={this.closeModal} className=\"closeButton\">close</div>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}